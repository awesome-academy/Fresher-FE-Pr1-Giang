@use "sass:math";

$grid-gaps: (
    "0": 0,
    "1": $spacing,
    "2": $spacing * 2,
    "3": $spacing * 3,
    "4": $spacing * 4,
    "5": $spacing * 5,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

$align-items: flex-start, flex-end, center, stretch;

@each $val in $align-items {
    .align-#{$val} {
        align-items: $val;
    }
}

$flex-direction: row, row-reverse, column, column-reverse;

@each $val in $flex-direction {
    .flex-#{$val} {
        flex-direction: $val;
    }
}

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
}

@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
      margin: 0 $val;
    }
    .gap-#{$key} {
      margin-left: -$val;
      margin-right: -$val;
    }
}

@include xs {
    @for $i from 1 through 12 {
        .col-#{$i}-xs {
            box-sizing: border-box;
            width: math.div($i * 100%, 12);
        }
    }
}

@include sm {
    @for $i from 1 through 12 {
        .col-#{$i}-sm {
            box-sizing: border-box;
            width: math.div($i * 100%, 12);
        }
    }
}

@include md {
    @for $i from 1 through 12 {
        .col-#{$i}-md {
            box-sizing: border-box;
            width: math.div($i * 100%, 12);
        }
    }
}

@include lg {
    @for $i from 1 through 12 {
        .col-#{$i}-lg {
            box-sizing: border-box;
            width: math.div($i * 100%, 12);
        }
    }
}

@include xl {
    @for $i from 1 through 12 {
        .col-#{$i}-xl {
            box-sizing: border-box;
            width: math.div($i * 100%, 12);
        }
    }
}
